apply plugin:'application'
apply plugin:'eclipse'
apply plugin:'java'

mainClassName = "gaia.evaluate.Application"

sourceCompatibility = 1.7
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'ORM JPA Evaluate DataNucleus', 'Implementation-Version': version
    }
}


repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
    compile group: 'log4j', name: 'log4j', version: '1.2.16'
    
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.2.1'
    
    compile group: 'org.postgresql', name: 'postgresql', version: '9.3-1101-jdbc41'
    
    compile 'org.datanucleus:javax.persistence:2.1.0'
    compile 'org.datanucleus:datanucleus-core:4.0.3'
    compile 'org.datanucleus:datanucleus-api-jpa:4.0.3'
    compile 'org.datanucleus:datanucleus-rdbms:4.0.3'
    
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task jdoEnhance << {
	try {
		logger.lifecycle 'Enhancing DataNucleus classes...'

		ant.taskdef(
			name: 'enhance', 
			classpath: project.configurations.compile.asPath, 
			classname: 'org.datanucleus.enhancer.tools.EnhancerTask'
		)
		ant.enhance(failonerror: true, verbose: true ) {
			classpath {
				classpath: project.configurations.compile.asPath, 
				pathelement(path: project.configurations.datanucleus.asPath)
			}
			fileset(
				dir: sourceSets.main.output.classesDir, includes: '**/*.class'
			)
		}
	}
	catch(Exception e) {
		throw new GradleException('An error occurred enhancing DataNucleus classes.', e)
	}
	finally {
		logger.lifecycle 'Finished enhancing DataNucleus classes.'
	}
}

jar.dependsOn jdoEnhance
